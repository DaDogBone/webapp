<link rel="stylesheet" href="../styles/upload.css">
<div class="upload">
    <h1>Lets get posting</h1>

    <div class="input-div">
        <p>Drag & Drop images here or <span class="browse">Browse</span></p>
        <input formaction="/finishpost" type="file" id="userImage" class="file" multiple="multiple" accept="image/png, image/jpeg, image/jpg">
    </div>



    <form id="queued-form">
        <div class="header">
            <h3>Confirm Post?</h3>
            <button type="submit">Upload</button>
        </div>
        <div class="queued-div"><p>Saved Imaged</p>
        </div>
        
    </form>
</div>
<script src="../static/scripts/upload.js"></script>
</main>
<div id="imageContainer"></div>

<script>
  


    let queuedImagesArray = [],
        savedForm = document.querySelector("#saved-form"),
        queuedForm = document.querySelector("#queued-form"),
        savedDiv = document.querySelector(".saved-div"),
        queuedDiv = document.querySelector(".queued-div"),
        inputDiv = document.querySelector(".input-div"),
        input = document.querySelector(".input-div input"),
        serverMessage = document.querySelector(".server-message"),
        deleteImages = []

    // saved in server images
    //queued in frontend images
    function displayQueuedImages() {
        let images = ""
        queuedImagesArray.forEach((image, index) => {
            images +=  `<div class="image">
                      <img src="${URL.createObjectURL(image)}" alt="image">
                       <span onclick="deleteQueuedImage(${index})">&times;</span>
                       </div>`
        })
        queuedDiv.innerHTML = images
    }


    input.addEventListener("change", () => {
      const files = input.files;
      for (let i = 0; i < files.length; i++) {
        queuedImagesArray.push(files[i])
      }
      queuedForm.reset();
      displayQueuedImages()
    })


    inputDiv.addEventListener("drop", (e) => {
       e.preventDefault()
      const files = e.dataTransfer.files
      for (let i = 0; i < files.length; i++) {
        if (!files[i].type.match("image")) continue; // only photos

        if (queuedImagesArray.every(image => image.name !== files[i].name))
          queuedImagesArray.push(files[i])
      }
      displayQueuedImages()
    })


    queuedForm.addEventListener("submit", (e) => {
      e.preventDefault()
      sendQueuedImagesToServer()
    });
    
    
    function sendQueuedImagesToServer() {
      const formData = new FormData(queuedForm);

      queuedImagesArray.forEach((image, index) => {
        formData.append(`file[${index}]`, image)
      })

     /* fetch("upload", {
        method: "POST",
        body: formData
      })*/
    } 
    
</script>
{{!https://www.youtube.com/watch?v=EaBSeNSc-2c}}